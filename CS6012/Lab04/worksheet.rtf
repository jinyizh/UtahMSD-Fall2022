{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12540\viewh16140\viewkind1
\deftab720
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 Lab 4 Worksheet\
\
Answer the following questions by modifying this text file. Add your answer below each question.\
\
\
1. Which two binarySearch tests are failing?\
\
binarySearch(arr1, 0) and Part1.binarySearch(arr2, 20) are failing.\
\
2. What are the values of arr and goal passed in to binary search?\
\
the values of arr are \{1, 2, 3, 4, 5\}, and goal is 0.\
\
3. For each of the two cases of binarySearch that are failing, which return statements are they executing in error (is it returning true when it should be returning false, or the other way around)?\
\
For the first case failed, it returns true when it should return false, because it execute the statement: if (goal == mid) return true; \
For the second case failed, it return false when it should true\
\
4. What is the bug in binarySearch? How do you fix it?\
\
The bug is that the index of the array is used to compare with the goal value, while the goal value should compare to the 
\f1\b element
\f0\b0  at the index. I will change the variable mid to array[mid].\
\
5. Which loops appear to be inifinite?\
\
Loop #2 and loop #4 are infinite.\
\
6. For the loops that you found to be infinite, briefly explain why they are never progressing.\
\
For loop #2, the value of b is constantly 0, which is always less than 10. Therefore, the while loop never breaks. For loop #4, the value of f is either 5 or 6 after each loop, which are both larger than 0. Therefore the while hoop also never ends.\
\
7. What does the call to password.split(" ") appear to do? Hint: examine the input value of "password", then examine the items in the "tokens" array returned by the call.\
\
The password.split(\'93 \'93) split the input password to separate strings and compares each of them to the variable a.\
\
8. What is the correct password? (next page)\
\
The correct password is \'931 4 9 16 25\'94.}