Lab 1 Worksheet Jinyi Zhou u1424752

Answer the following questions in a text file(NOT A WORD DOCUMENT!). Add your answer below each question.

1. Where is the assertEquals method defined? What does it do? Can we use assertEquals for more than just int types? (Hint: Consult the API for JUnit)

The assertEquals method is defined in the Java class Assert. It is used in testing to test if the two arguments are equal. Only failed assertions are recorded. We can use assertEquals for more than just int. We can use it for array, object, condition, long, double and so on.

2. Briefly describe what each of the three tests is checking.

The first test, emptyArray, tests if the array is empty or contains only one element (for arr1 it is an empty array). If it's empty or only contains one element, the smallest difference will be set as -1, as written in the findSmallestDiff function. The second test, allArrayElementsEqual, tests if all the elements in the array is the same (that is, the difference between any two of the elements is 0). The third test, check the smallest difference in a randomly-ordered array.

3. Why is our unimplemented findSmallestDiff method passing one of the tests?

When the findSmallestDiff method only has a stub, it is still set to return 0. In the second test, the expected velue is 0, too. Therefore the method passed the second test.

4. Why are we failing the third test? How should our method be modified to correct this?

In the findSmallestDiff method, we simply subtract elements from other elements. What we need to compare is actually the absolute value of the substraction. To correct this, we need to first change to the declaration of diff from: int diff = a[0] - a[1]; to: int diff = Math.abs(a[0] - a[1]); Then, after the line: int tmp_diff = a[i] - a[j]; we can add another line: tmp_diff = Math.abs(tmp_diff);

5. What is the appropriate call to assertEquals for your new test (test 4)?

For test 4, I initialized a array with only one element (arr4 = new int[1]), and asserted if the result of findSmallestDiff is -1.

6. Provide one more test (test 5) for the findSmallestDiff method. Briefly describe your test and write the call to assertEquals here.

My test 5 tests the case where all the elements of the array are negative number. The array used for this test is declared as arr5 = new int[] {-7, -5, -3, -1}; and the call to assertEquals is: public void negativeElement() {assertEquals(2, DiffUtil.findSmallestDiff(arr5));}

7. Briefly describe your unit tests for Assignment 1.

To sum up, test 1 tests if the method works with empty arrays arrays with only one element. Test 2 tests if the method works with arrays where all elements is the same. Test 3 tests if the method works with randomly ordered arrays. My test 4 tests if the method works with arrays that have only one element, and test 5 tests if the method works with arrays that have only negative numbers as elements.